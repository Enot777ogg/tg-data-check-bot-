import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.types import ChatAction
from aiogram.filters import Command
from dotenv import load_dotenv
from phonecheck import check_phone
from fiocheck import search_fio

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ:\n\n"
        "üì± /checkphone <–Ω–æ–º–µ—Ä> ‚Äî –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∏ —Å–ø–∞–º\n"
        "üßë /checkfio <–§–ò–û> ‚Äî –ø–æ–∏—Å–∫ –≤ –±–∞–∑–µ —É—Ç–µ—á–µ–∫\n\n"
        "–ü—Ä–∏–º–µ—Ä:\n"
        "/checkphone +79991234567\n"
        "/checkfio –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
    )

@dp.message(Command("checkphone"))
async def cmd_checkphone(message: types.Message):
    args = message.text.split(maxsplit=1)
    if len(args) != 2:
        await message.answer("‚ùó –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n/checkphone +79991234567")
        return

    number = args[1]
    await message.chat.do(ChatAction.TYPING)
    result = await check_phone(number)

    if not result["valid"]:
        await message.answer(f"‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π –Ω–æ–º–µ—Ä: {result.get('reason')}")
    else:
        spam = "üî¥ –ù–∞–π–¥–µ–Ω –≤ —Å–ø–∞–º-–±–∞–∑–µ" if result["spammer"] else "üü¢ –ù–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∞–º–µ"
        await message.answer(
            f"‚òéÔ∏è –ù–æ–º–µ—Ä: {result['formatted']}\n"
            f"üåç –°—Ç—Ä–∞–Ω–∞: {result['country']}\n"
            f"‚úÖ –í–∞–ª–∏–¥–Ω—ã–π\n"
            f"{spam}"
        )

@dp.message(Command("checkfio"))
async def cmd_checkfio(message: types.Message):
    args = message.text.split(maxsplit=1)
    if len(args) != 2:
        await message.answer("‚ùó –ü—Ä–∏–º–µ—Ä:\n/checkfio –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á")
        return

    fio = args[1]
    await message.chat.do(ChatAction.TYPING)
    result = search_fio(fio)

    if result is None:
        await message.answer("üü¢ –°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    elif isinstance(result, str):
        await message.answer(result)
    else:
        msg = "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è:\n\n"
        for row in result:
            msg += (
                f"üìÖ –î–∞—Ç–∞: {row['–î–∞—Ç–∞']}\n"
                f"üóÇ –ò—Å—Ç–æ—á–Ω–∏–∫: {row['–ò—Å—Ç–æ—á–Ω–∏–∫']}\n"
                f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {row['–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π']}\n\n"
            )
        await message.answer(msg)

if __name__ == "__main__":
    asyncio.run(dp.start_polling(bot))
